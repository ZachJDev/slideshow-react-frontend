{"version":3,"sources":["img/play.svg","img/pause.svg","logo.svg","components/Slide.js","components/View.js","components/Search.js","components/infoBar.js","components/Nav.js","components/doublyLinkedList.js","components/Slideshow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Slide","CSSTransition","in","this","props","current","timeout","classNames","key","alt","title","src","imageSrc","className","Component","View","togglePlay","event","handlePlaying","hide","playing","button","pauseButton","playButton","restart","isNew","begin","onClick","currentImage","url","prevImage","nextImage","Search","handleType","handleInput","target","value","handleSubmit","preventDefault","handleSearch","type","input","onChange","InfoBar","artist","source","Nav","navigate","handleNav","forward","icon","faChevronRight","faChevronLeft","defaultProps","Node","val","prev","next","DoublyLinkedList","head","tail","length","node","oldHead","pos","counter","get","unshift","push","oldNode","newNode","shift","pop","prevNode","arr","loop","newList","item","Slideshow","num","state","images","sendRequest","setState","isLoading","clearInterval","timer","setTimeout","FD","FormData","set","axios","method","data","then","r","fromArray","setInterval","playPause","goFoward","id","text","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,4ECA3CD,EAAOC,QAAU,IAA0B,kC,uSCqB5BC,G,6KAZP,OACI,kBAACC,EAAA,EAAD,CACCC,GAAIC,KAAKC,MAAMC,QACfC,QAAS,IACTC,WAAW,QAEZ,yBAAKC,IAAKL,KAAKC,MAAMI,IAAMC,IAAKN,KAAKC,MAAMM,MAAOC,IAAKR,KAAKC,MAAMQ,SAAUC,UAAWV,KAAKC,MAAMS,iB,GAT1FC,c,0CC2BLC,E,4MAtBXC,WAAa,SAACC,GACV,EAAKb,MAAMc,iB,uDAGL,IAAD,MACCC,EAAOhB,KAAKC,MAAMgB,QAAU,GAAK,QACjCC,EAASlB,KAAKC,MAAMgB,QAAWE,IAAcC,IAC7CC,EAAUrB,KAAKC,MAAMqB,MAAQ,UAAY,GAC/C,OACItB,KAAKC,MAAMsB,OACZ,yBAAKb,UAAW,WAAYc,QAASxB,KAAKa,YAE1C,yBAAKL,IAAKU,EAAQR,UAAU,gBAC3B,kBAAC,EAAD,CAAOL,IAAKL,KAAKC,MAAMwB,aAAaC,IAAKjB,SAAUT,KAAKC,MAAMwB,aAAaC,IAAKnB,MAAOP,KAAKC,MAAMwB,aAAalB,MAAOG,UAAW,sBAAuBR,SAAS,IACjK,kBAAC,EAAD,CAAOG,IAAG,UAAEL,KAAKC,MAAM0B,iBAAb,aAAE,EAAsBD,IAAKjB,SAAQ,UAAET,KAAKC,MAAM0B,iBAAb,aAAE,EAAsBD,IAAKnB,MAAK,UAAEP,KAAKC,MAAM0B,iBAAb,aAAE,EAAsBpB,MAAOG,UAAW,SAAWM,EAAOK,EAASnB,SAAS,IAC/J,kBAAC,EAAD,CAAOG,IAAKL,KAAKC,MAAM2B,UAAUF,IAAKjB,SAAUT,KAAKC,MAAM2B,UAAUF,IAAMnB,MAAOP,KAAKC,MAAM2B,UAAUrB,MAAOL,SAAS,EAAOQ,UAAW,0B,GAjBlIC,aCeJkB,G,kNAlBXC,WAAa,SAAChB,GACV,EAAKb,MAAM8B,YAAYjB,EAAMkB,OAAOC,Q,EAExCC,aAAe,SAACpB,GACZA,EAAMqB,iBACN,EAAKlC,MAAMmC,gB,uDAIX,OACI,8BACI,2BAAO1B,UAAU,aAAa2B,KAAK,OAAOJ,MAAOjC,KAAKC,MAAMqC,MAAOC,SAAUvC,KAAK8B,aAClF,4BAAQpB,UAAU,gBAAgBc,QAASxB,KAAKkC,cAAhD,e,GAdKvB,cCeN6B,G,6KAbX,OACE,yBAAK9B,UAAWV,KAAKC,MAAMS,WACzB,wBAAIA,UAAU,aACZ,uCAAaV,KAAKC,MAAMwC,QACxB,sCAAYzC,KAAKC,MAAMM,OACvB,uCAAaP,KAAKC,MAAMyC,c,GAPZ/B,c,eCEhBgC,G,kNAIFC,SAAW,kBAAM,EAAK3C,MAAM4C,UAAU,EAAK5C,MAAM6C,U,uDAG7C,OACK9C,KAAKC,MAAMsB,OAAS,yBAAKb,UAAU,WAAWc,QAASxB,KAAK4C,UACxD5C,KAAKC,MAAM6C,QACZ,kBAAC,IAAD,CAAiBpC,UAAU,OAAOqC,KAAMC,MACxC,kBAAC,IAAD,CAAiBtC,UAAU,OAAOqC,KAAME,W,GAXtCtC,cAAZgC,EACKO,aAAe,GAgBXP,Q,QCvBTQ,EACJ,WAAYC,GAAM,oBAChBpD,KAAKoD,IAAMA,EACXpD,KAAKqD,KAAO,KACZrD,KAAKsD,KAAO,MA6IDC,E,WAxIb,aAAe,oBACbvD,KAAKwD,KAAO,KACZxD,KAAKyD,KAAO,KACZzD,KAAK0D,OAAS,E,iDAEXN,GACH,IAAIO,EAAO,IAAIR,EAAKC,GAQpB,OAPKpD,KAAKwD,MAERxD,KAAKyD,KAAKH,KAAOK,EACjBA,EAAKN,KAAOrD,KAAKyD,MAHHzD,KAAKwD,KAAOG,EAK5B3D,KAAKyD,KAAOE,EACZ3D,KAAK0D,SACE1D,O,4BAIP,GAAKA,KAAKyD,KAAV,CAEA,IAAIE,EAAO3D,KAAKyD,KAWhB,OAVoB,IAAhBzD,KAAK0D,QACP1D,KAAKwD,KAAO,KACZxD,KAAKyD,KAAO,OAEZzD,KAAKyD,KAAOzD,KAAKyD,KAAKJ,KACtBrD,KAAKyD,KAAKH,KAAO,MAEnBK,EAAKN,KAAO,KACZrD,KAAK0D,SAEEC,K,8BAIP,GAAK3D,KAAKwD,KAAV,CAEA,IAAIG,EAAO3D,KAAKwD,KAWhB,OAVoB,IAAhBxD,KAAK0D,QACP1D,KAAKwD,KAAO,KACZxD,KAAKyD,KAAO,OAEZzD,KAAKwD,KAAOxD,KAAKwD,KAAKF,KACtBtD,KAAKwD,KAAKH,KAAO,MAEnBM,EAAKL,KAAO,KACZtD,KAAK0D,SAEEC,K,8BAGDP,GACN,IAAIO,EAAO,IAAIR,EAAKC,GACpB,GAAKpD,KAAKwD,KACL,CACH,IAAII,EAAU5D,KAAKwD,KACnBI,EAAQP,KAAOM,EACfA,EAAKL,KAAOM,OAJE5D,KAAKyD,KAAOE,EAQ5B,OAFA3D,KAAKwD,KAAOG,EACZ3D,KAAK0D,SACE1D,O,0BAGL6D,GACF,IAAIF,EACJ,GAAIE,EAAM,GAAKA,GAAO7D,KAAK0D,OAAQ,OAAO,KAC1C,GAAIG,EAAM7D,KAAK0D,OAAS,EAAG,CACzBC,EAAO3D,KAAKwD,KACZ,IAAK,IAAIM,EAAU,EAAGA,EAAUD,EAAKC,IACnCH,EAAOA,EAAKL,SAET,CACLK,EAAO3D,KAAKyD,KACZ,IAAK,IAAIK,EAAU9D,KAAK0D,OAAS,EAAGI,EAAUD,EAAKC,IACjDH,EAAOA,EAAKN,KAGhB,OAAOM,I,0BAGLE,EAAKT,GACP,IAAIO,EAAO3D,KAAK+D,IAAIF,GACpB,QAAIF,IACJA,EAAKP,IAAMA,GACJ,K,6BAGFS,EAAKT,GACV,GAAIS,EAAM,GAAKA,GAAO7D,KAAK0D,OAAQ,OAAO,EAC1C,GAAW,IAARG,EAAW,QAAS7D,KAAKgE,QAAQZ,GACpC,GAAGS,IAAQ7D,KAAK0D,OAAQ,QAAS1D,KAAKiE,KAAKb,GAEzC,IAAIc,EAAUlE,KAAK+D,IAAIF,GACnBM,EAAU,IAAIhB,EAAKC,GAQvB,OANAc,EAAQb,KAAKC,KAAOa,EACpBA,EAAQd,KAAOa,EAAQb,KACvBa,EAAQb,KAAOc,EACfA,EAAQb,KAAOY,EAEflE,KAAK0D,UACE,I,6BAGJG,GACH,GAAW,IAARA,EAAW,OAAO7D,KAAKoE,QAC1B,GAAGP,IAAQ7D,KAAK0D,OAAS,EAAG,OAAO1D,KAAKqE,MAC1C,IAAIV,EAAO3D,KAAK+D,IAAIF,GACpB,GAAIF,EAAJ,CACA,IAAIW,EAAWX,EAAKN,KASpB,OANAiB,EAAShB,KAAOK,EAAKL,KACrBK,EAAKL,KAAKD,KAAOiB,EAEjBX,EAAKL,KAAO,KACZK,EAAKN,KAAO,KACZrD,KAAK0D,SACEC,M,iCAGSY,GAAkB,IAAD,EAAZC,EAAY,wDAC5BC,EAAU,IAAIlB,EADc,cAEjBgB,GAFiB,IAEjC,IAAI,EAAJ,qBAAqB,CAAC,IAAdG,EAAa,QACnBD,EAAQR,KAAKS,IAHkB,8BAUjC,OAJGF,IACDC,EAAQhB,KAAKH,KAAOmB,EAAQjB,KAC5BiB,EAAQjB,KAAKH,KAAOoB,EAAQhB,MAEvBgB,M,KCIIE,G,wDApIb,WAAY1E,GAAQ,IAAD,8BACjB,cAAMA,IAeRuE,KAAO,SAACI,GACN,IAAMlB,EAAS,EAAKmB,MAAMC,OAAOpB,OAAS,EAC1C,OAAIkB,EAAM,EAAUlB,EAAS,EACzBkB,GAAOlB,EAAe,EACnBkB,GApBU,EAuBnBG,YAAc,WACZ,EAAKC,SAAS,CAACC,WAAW,IAC1BC,cAAc,EAAKL,MAAMM,OAEzBC,YAAW,WACT,IAAMC,EAAK,IAAIC,SACfD,EAAGE,IAAI,aAAP,UAAwB,EAAKV,MAAMvC,QACnCkD,IAAM,CACJC,OAAQ,OACR/D,IAAK,+CACLgE,KAAML,IACLM,MAAK,SAACC,GACP,EAAKZ,SAAS,CAAEF,OAAQvB,EAAiBsC,UAAUD,EAAEF,MAAM,KAC3D,EAAKV,SAAS,CACZG,MAAOW,aAAY,WACjB,EAAKd,UAAS,SAACH,GAAD,MAAY,CACxBpD,aAAcoD,EAAMpD,aAAa6B,KACjChC,OAAO,QAER,KACHL,SAAS,EACTK,OAAO,EACP2D,WAAW,IAEb,EAAKD,UAAS,SAACH,GAAD,MAAY,CAAEpD,aAAcoD,EAAMC,OAAOtB,cAExD,OAjDc,EAqDnBuC,UAAY,WACN,EAAKlB,MAAM5D,QAASiE,cAAc,EAAKL,MAAMM,QAG/C,EAAKH,UAAS,SAACH,GAAD,MAAY,CAACpD,aAAcoD,EAAMpD,aAAa6B,KAAMhC,OAAO,MACzE,EAAK0D,SAAS,CACZG,MAAOW,aAAY,WACjB,EAAKd,UAAS,SAACH,GAAD,MAAY,CACxBpD,aAAcoD,EAAMpD,aAAa6B,KACjChC,OAAO,QAER,QAGP,EAAK0D,UAAS,SAACH,GAAD,MAAY,CAAE5D,SAAU4D,EAAM5D,aAnE3B,EAsEnB4B,UAAY,SAACmD,GACXd,cAAc,EAAKL,MAAMM,OACzB,EAAKH,SAAS,CAAC/D,SAAS,IACpB+E,EAGF,EAAKhB,UAAS,SAACH,GAAD,MAAY,CAAGpD,aAAcoD,EAAMpD,aAAa6B,KAAMhC,OAAO,MAE3E,EAAK0D,UAAS,SAACH,GAAD,MAAY,CAAGpD,aAAcoD,EAAMpD,aAAa4B,KAAM/B,OAAO,OA9E5D,EAmFnBe,KAAO,SAACC,GAAD,OAAW,EAAK0C,SAAS,CAAE1C,WAjFhC,EAAKuC,MAAQ,CACXC,OAAQ,IAAIvB,EACZjB,MAAO,GACPrB,SAAS,EACTQ,aAAc,KACdH,OAAO,EACP2D,WAAW,GARI,E,qDAqFT,IAAD,YAEP,OACE,yBAAKgB,GAAG,WACN,kBAAC,EAAD,CACE7D,aAAcpC,KAAK+E,YACnBzC,MAAOtC,KAAK6E,MAAMvC,MAClBP,YAAa/B,KAAKqC,OAGjBrC,KAAK6E,MAAMpD,cACd,yBAAKf,UAAU,aACb,kBAAC,EAAD,CACEa,MAAOvB,KAAK6E,MAAMC,OAAOpB,OAAS,EAClCZ,SAAS,EACTD,UAAW7C,KAAK6C,YAElB,kBAAC,EAAD,CACE9B,cAAef,KAAK+F,UACpB9E,QAASjB,KAAK6E,MAAM5D,QACpBiF,KAAMlG,KAAK6E,MAAMvC,MACjBX,UAAS,UAAE3B,KAAK6E,MAAMpD,oBAAb,aAAE,EAAyB4B,KAAKD,IACzC3B,aAAY,UAAEzB,KAAK6E,MAAMpD,oBAAb,aAAE,EAAyB2B,IACvCxB,UAAS,UAAE5B,KAAK6E,MAAMpD,oBAAb,aAAE,EAAyB6B,KAAKF,IACzC7B,MAAOvB,KAAK6E,MAAMC,OAAOpB,OAAS,EAClCpC,MAAStB,KAAK6E,MAAMvD,QAEtB,kBAAC,EAAD,CACEC,MAAOvB,KAAK6E,MAAMC,OAAOpB,OAAS,EAClCZ,SAAS,EACTD,UAAW7C,KAAK6C,aAGpB,kBAAC,EAAD,CACEnC,UAAW,cACX+B,OAAM,UAAEzC,KAAK6E,MAAMpD,oBAAb,aAAE,EAAyB2B,IAAIX,OACrClC,MAAK,UAAEP,KAAK6E,MAAMpD,oBAAb,aAAE,EAAyB2B,IAAI7C,MACpCmC,OAAM,UAAE1C,KAAK6E,MAAMpD,oBAAb,aAAE,EAAyB2B,IAAIV,SAGrC1C,KAAK6E,MAAMI,UAAY,yBAAKvE,UAAU,WAAU,yBAAKA,UAAU,UAAc,yBAAKA,UAAU,WAAuB,U,GA9HrGC,cCDTwF,MANf,WACE,OACE,kBAAC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrB,MAAK,SAAAsB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8a0e9815.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/play.d6fa1409.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.928740ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, {Component} from 'react'\r\nimport { CSSTransition } from 'react-transition-group'\r\n\r\n\r\nimport './Slide.css'\r\n\r\nclass Slide extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <CSSTransition \r\n             in={this.props.current}\r\n             timeout={500}\r\n             classNames=\"fade\"\r\n             >\r\n            <img key={this.props.key}  alt={this.props.title} src={this.props.imageSrc} className={this.props.className}></img>\r\n            </CSSTransition>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Slide","import React, {Component} from 'react'\r\n\r\nimport Slide from './Slide'\r\n\r\nimport './View.css'\r\n\r\nimport playButton from '../img/play.svg'\r\nimport pauseButton from '../img/pause.svg'\r\n\r\nclass View extends Component { \r\n\r\n    togglePlay = (event) => {\r\n        this.props.handlePlaying()\r\n    }\r\n    \r\n    render() {\r\n        const hide = this.props.playing ? \"\" : \"hide \" \r\n        const button = this.props.playing ?  pauseButton : playButton\r\n        const restart = this.props.isNew ? \"restart\" : '' // Finally came up with a Boolean, though still less than perfect?\r\n        return (\r\n           (this.props.begin &&\r\n           <div className={\"view-box\"} onClick={this.togglePlay}>\r\n           {}\r\n           <img src={button} className=\"play-button\"/>\r\n            <Slide key={this.props.currentImage.url} imageSrc={this.props.currentImage.url} title={this.props.currentImage.title} className={\"slide current-slide\"} current={true} />\r\n            <Slide key={this.props.prevImage?.url} imageSrc={this.props.prevImage?.url} title={this.props.prevImage?.title} className={\"slide \" + hide + restart} current={false} />\r\n            <Slide key={this.props.nextImage.url} imageSrc={this.props.nextImage.url}  title={this.props.nextImage.title} current={false} className={\"next-slide slide\"} />\r\n            </div>)\r\n        )\r\n            \r\n    }\r\n}\r\n\r\nexport default View\r\n          ","import React, {Component} from 'react'\r\n\r\nimport './Search.css'\r\n\r\nclass Search extends Component {\r\n\r\n    handleType = (event) => {\r\n        this.props.handleInput(event.target.value)\r\n    }\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.handleSearch()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <input className=\"search-bar\" type=\"text\" value={this.props.input} onChange={this.handleType} /> \r\n                <button className=\"search-button\" onClick={this.handleSubmit}>Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search","import React, { Component } from \"react\";\r\n\r\nimport \"./infoBar.css\";\r\n\r\nclass InfoBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.className}>\r\n        <ul className=\"info-list\">\r\n          <li>Artist: {this.props.artist}</li>\r\n          <li>Title: {this.props.title}</li>\r\n          <li>Source: {this.props.source}</li>\r\n\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoBar;\r\n","import React, { Component } from \"react\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\r\nimport {faChevronRight, faChevronLeft} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nimport './Nav.css'\r\n\r\nclass Nav extends Component {\r\n    static defaultProps = {\r\n        // forward: true\r\n    }\r\n    navigate = () => this.props.handleNav(this.props.forward)\r\n\r\n    render() {\r\n        return (\r\n            (this.props.begin && <div className=\"nav-wrap\" onClick={this.navigate}>\r\n                {this.props.forward ? \r\n                <FontAwesomeIcon className=\"icon\" icon={faChevronRight}/> :\r\n                <FontAwesomeIcon className=\"icon\" icon={faChevronLeft}/>}\r\n            </div>)\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav","class Node {\r\n  constructor(val) {\r\n    this.val = val;\r\n    this.prev = null;\r\n    this.next = null;\r\n  }\r\n}\r\n\r\nclass DoublyLinkedList {\r\n  constructor() {\r\n    this.head = null;\r\n    this.tail = null;\r\n    this.length = 0;\r\n  }\r\n  push(val) {\r\n    let node = new Node(val);\r\n    if (!this.head) this.head = node;\r\n    else {\r\n      this.tail.next = node;\r\n      node.prev = this.tail;\r\n    }\r\n    this.tail = node;\r\n    this.length++;\r\n    return this;\r\n  }\r\n\r\n  pop() {\r\n    if (!this.tail) return undefined;\r\n\r\n    let node = this.tail;\r\n    if (this.length === 1) {\r\n      this.head = null;\r\n      this.tail = null;\r\n    } else {\r\n      this.tail = this.tail.prev;\r\n      this.tail.next = null;\r\n    }\r\n    node.prev = null;\r\n    this.length--;\r\n\r\n    return node;\r\n  }\r\n\r\n  shift() {\r\n    if (!this.head) return undefined;\r\n\r\n    let node = this.head;\r\n    if (this.length === 1) {\r\n      this.head = null;\r\n      this.tail = null;\r\n    } else {\r\n      this.head = this.head.next;\r\n      this.head.prev = null;\r\n    }\r\n    node.next = null;\r\n    this.length--;\r\n\r\n    return node;\r\n  }\r\n\r\n  unshift(val) {\r\n    let node = new Node(val);\r\n    if (!this.head) this.tail = node;\r\n    else {\r\n      let oldHead = this.head;\r\n      oldHead.prev = node;\r\n      node.next = oldHead;\r\n    }\r\n    this.head = node;\r\n    this.length++;\r\n    return this;\r\n  }\r\n\r\n  get(pos) {\r\n    let node;\r\n    if (pos < 0 || pos >= this.length) return null;\r\n    if (pos > this.length / 2) {\r\n      node = this.head;\r\n      for (let counter = 0; counter < pos; counter++) {\r\n        node = node.next;\r\n      }\r\n    } else {\r\n      node = this.tail;\r\n      for (let counter = this.length - 1; counter > pos; counter--) {\r\n        node = node.prev;\r\n      }\r\n    }\r\n    return node;\r\n  }\r\n\r\n  set(pos, val) {\r\n    let node = this.get(pos);\r\n    if(!node) return false;\r\n    node.val = val;\r\n    return true;\r\n  }\r\n\r\n  insert(pos, val) {\r\n    if (pos < 0 || pos >= this.length) return false;\r\n    if(pos === 0) return !!this.unshift(val)\r\n    if(pos === this.length) return !!this.push(val)\r\n\r\n      let oldNode = this.get(pos);\r\n      let newNode = new Node(val);\r\n\r\n      oldNode.prev.next = newNode;\r\n      newNode.prev = oldNode.prev;\r\n      oldNode.prev = newNode;\r\n      newNode.next = oldNode;\r\n\r\n      this.length++;\r\n      return true;\r\n  }\r\n\r\n  remove(pos) {\r\n      if(pos === 0) return this.shift()\r\n      if(pos === this.length - 1) return this.pop()\r\n    let node = this.get(pos);\r\n    if(!node) return undefined;\r\n    let prevNode = node.prev;\r\n\r\n    \r\n    prevNode.next = node.next;\r\n    node.next.prev = prevNode;\r\n    \r\n    node.next = null;\r\n    node.prev = null;\r\n    this.length--;\r\n    return node;\r\n  }\r\n\r\n   static fromArray(arr, loop=false) {\r\n     let newList = new DoublyLinkedList();\r\n    for(let item of arr) {\r\n      newList.push(item)\r\n    }\r\n\r\n    if(loop) {\r\n      newList.tail.next = newList.head;\r\n      newList.head.prev = newList.tail;\r\n    }\r\n    return newList\r\n  }\r\n}\r\n\r\nexport default DoublyLinkedList\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport View from \"./View\";\r\nimport Search from \"./Search\";\r\nimport InfoBar from \"./infoBar\";\r\nimport Nav from \"./Nav\";\r\n\r\nimport DoublyLinkedList from \"./doublyLinkedList\";\r\n\r\nimport \"./Slideshow.css\";\r\n\r\nclass Slideshow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      images: new DoublyLinkedList(),\r\n      input: \"\",\r\n      playing: false,\r\n      currentImage: null,\r\n      isNew: true,\r\n      isLoading: false\r\n    };\r\n  }\r\n  // The below version of loop didn't allow users to\r\n  // Navigate backwards from tick 0:\r\n\r\n  // loop = (num) => num % this.state.images.length;\r\n\r\n  loop = (num) => {\r\n    const length = this.state.images.length - 1;\r\n    if (num < 0) return length - 1;\r\n    if (num >= length) return 0;\r\n    return num;\r\n  };\r\n\r\n  sendRequest = () => {\r\n    this.setState({isLoading: true})\r\n    clearInterval(this.state.timer);\r\n    // Added a bit of a delay to actually show the loading animation.\r\n    setTimeout(() => {\r\n      const FD = new FormData();\r\n      FD.set(\"searchTerm\", `${this.state.input}`);\r\n      axios({\r\n        method: \"post\",\r\n        url: \"https://open-access-slideshow.herokuapp.com/\",\r\n        data: FD,\r\n      }).then((r) => {\r\n        this.setState({ images: DoublyLinkedList.fromArray(r.data, true) });\r\n        this.setState({\r\n          timer: setInterval(() => {\r\n            this.setState((state) => ({\r\n              currentImage: state.currentImage.next,\r\n              isNew: false\r\n            }));\r\n          }, 8000),\r\n          playing: true,\r\n          isNew: true,\r\n          isLoading: false,\r\n        });\r\n        this.setState((state) => ({ currentImage: state.images.head,}));\r\n      });\r\n    }, 1500)\r\n    \r\n  };\r\n\r\n  playPause = () => {\r\n    if (this.state.playing) clearInterval(this.state.timer);\r\n    else {\r\n      // Combining the STATEments below caused some odd problems.\r\n      this.setState((state) => ({currentImage: state.currentImage.next, isNew: false}));\r\n      this.setState({\r\n        timer: setInterval(() => {\r\n          this.setState((state) => ({\r\n            currentImage: state.currentImage.next,\r\n            isNew: false\r\n          }));\r\n        }, 8000),\r\n      });\r\n    }\r\n    this.setState((state) => ({ playing: !state.playing }));\r\n  };\r\n\r\n  handleNav = (goFoward) => {\r\n    clearInterval(this.state.timer);\r\n    this.setState({playing: false})\r\n    if (goFoward) {\r\n      // I added isNew to this setState (and in the PlayPause above) because without it, skipping images before the timer\r\n      // Had triggered once would keep their transitions from playing.\r\n      this.setState((state) => ({  currentImage: state.currentImage.next, isNew: false }));\r\n    } else {\r\n      this.setState((state) => ({  currentImage: state.currentImage.prev, isNew: false}));\r\n    }\r\n\r\n  };\r\n\r\n  type = (input) => this.setState({ input });\r\n\r\n  render() {\r\n    // let startingImage = new Object(this.state.currentImage?.val)\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <Search\r\n          handleSearch={this.sendRequest}\r\n          input={this.state.input}\r\n          handleInput={this.type}\r\n        />\r\n        \r\n        {( this.state.currentImage &&\r\n        <div className=\"slideshow\">\r\n          <Nav\r\n            begin={this.state.images.length > 0}\r\n            forward={false}\r\n            handleNav={this.handleNav}\r\n          />\r\n          <View\r\n            handlePlaying={this.playPause}\r\n            playing={this.state.playing}\r\n            text={this.state.input}\r\n            prevImage={this.state.currentImage?.prev.val}\r\n            currentImage={this.state.currentImage?.val}\r\n            nextImage={this.state.currentImage?.next.val}\r\n            begin={this.state.images.length > 0}\r\n            isNew = {this.state.isNew}\r\n          />\r\n          <Nav\r\n            begin={this.state.images.length > 0}\r\n            forward={true}\r\n            handleNav={this.handleNav}\r\n          />\r\n        </div>)}\r\n        <InfoBar\r\n          className={\"information\"}\r\n          artist={this.state.currentImage?.val.artist}\r\n          title={this.state.currentImage?.val.title}\r\n          source={this.state.currentImage?.val.source}\r\n        />\r\n        {\r\n          this.state.isLoading ? <div className=\"loading\"><div className=\"inner\"></div><div className=\"outer\"></div></div> : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slideshow;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css'\nimport Slideshow from './components/Slideshow'\n\nfunction App() {\n  return (\n    <Slideshow/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}